version: '3.9'
services:

  db:
    build:
      context: ./docker/db/
      dockerfile: Dockerfile
    ports:
      # NOTE: 1433 didn't work on Windows due to existing DB running
      - "11433:1433"
    environment:
      MSSQL_SA_PASSWORD: "<YourStrong@Passw0rd>"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: sqlcmd -S db1.internal.prod.example.com -U SA -P '<YourStrong@Passw0rd>' -Q 'select distinct 1 from AdventureWorksDW2017.dbo.DimDate'
    networks:
      mynetwork:
        aliases:
          - db1.internal.prod.example.com
    volumes:
     - mssql-data:/var/opt/mssql

  mykeycloak:
    container_name: mykeycloak
    build: ./docker/keycloak/
    # build:
    #   context: ./docker/keycloak/
    #   dockerfile: Dockerfile
    #   target: production
    command: start --optimized --hostname=localhost
    ports:
      - "8443:8443"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # - KC_DB: postgres
      # - KC_DB_URL: <DBURL>
      # - KC_DB_USERNAME: <DBUSERNAME>
      # - KC_DB_PASSWORD: <DBPASSWORD>
      # - KC_HOSTNAME: localhost    
    depends_on:
      - db
    networks:
      mynetwork:
        aliases:
          - keycloak1.internal.prod.example.com

  # Example of service with image only
  myredis:
    image: "redis:alpine"

  # web:
  #   build:
  #     context: ./docker/web/
  #     dockerfile: Dockerfile
  #   user: root
  #   depends_on:
  #     - db
  #   volumes:
  #     - .:/code/
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     DJANGO_SETTINGS_MODULE: SqlServerOnDocker.settings
  #   command: python3 manage.py runserver 0.0.0.0:8080
  #   restart: unless-stopped
  #   networks:
  #     mynetwork:
  #       aliases:
  #         - web1.internal.prod.example.com

networks:
  mynetwork:
    driver: bridge

volumes:
  mssql-data:
    # actually this is the default
    # driver: local